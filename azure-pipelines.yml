pool:
  vmImage: 'ubuntu-latest'
trigger:
  - master
steps:
  - task: Npm@1
    inputs:
      command: 'custom'
      customcommand: 'install --production'
  - script: |
      npm install
      npm test
    displayName: 'Run unit tests'
    continueOnError: true
  - script: |
      if [ -f $(System.DefaultWorkingDirectory)/test-report.xml ]; then
        echo "Test report found."
      else
        echo "Test report not found. Skipping test results publishing."
        exit 0
      fi
    displayName: 'Check test report file'
    condition: succeededOrFailed()
  - task: PublishTestResults@1
    displayName: 'Publish Test Results'
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: $(System.DefaultWorkingDirectory)/test-report.xml
  - task: PublishCodeCoverageResults@2
    displayName: 'Publish Code Coverage'
    condition: 'in(variables[''Agent.JobStatus''], ''Succeeded'')'
    inputs:
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/*coverage.xml'
  - task: ArchiveFiles@2
    displayName: 'Archive sources'
    inputs:
      rootFolderOrFile: $(Build.SourcesDirectory)
      includeRootFolder: false
  - task: CopyFiles@2
    displayName: 'Copy ARM templates'
    inputs:
      SourceFolder: deployment
      Contents: '*.json'
      TargetFolder: $(build.artifactstagingdirectory)/Templates
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'